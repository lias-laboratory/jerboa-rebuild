#+title: Reevaluation Tree

* Algorithme d'appariement de paramètre topologique
Dans cet algorithme, on construit, niveau par niveau un arbre permettant
d'appareiller des paramètres topologiques selon l'édition du processus
constructif d'un objet.

Pour chaque branche, on crée une liste d'évènements ainsi qu'une liste
d'orbites.

selon le type de l'application courante, on opère différement.

** L'application est INIT
On vérifie si le niveau est enregistré comme NO_EFFECT (c'est marqué "ø" dans le
niveau d'orbites).

À partir du résultat d'application de l'application courante, on récupère le
paramètre paramétrique qui devra être utilisé pour l'application INIT suivante.

*** Appariement de brin
Pour appareiller un nom de nœud à un brin, on utilise le résultat d'application
de la règle courante.

S'il n'y aucun paramètres d'enregistré pour la branche courante, on prend le
premier brin disponible parmi ceux associés au nœud du niveau d'orbite.

Sinon, on parcours le résultat de l'application courante pour trouver le
paramètre précédemment enregistré.

Si on le trouve, on utilise sa coordonnée de rangée (j) et on l'associe avec la
coordonnée de colonne (i) du nœud pour désigner un brin aux coordonnées (i,j)
comme nouveau paramètre topologiques. Conceptuellement, cela veut dire que l'on
désigne le brin créé par un nœud spécifique et qui est une copie du paramètre
topologique précédent.

Si on ne le trouve pas, c'est supposé être du NO_EFFECT (et dans ce cas on n'est
pas sensé y arriver, mais au cas où, on ne met pas à jour quand même)

*** Appariement de niveau

Pour appareiller un niveau d'application, on recrée ses évènements ainsi que ses
orbites dans l'arbre de réévaluation. Ses relations avec le niveau précédent
sont déterminés à nouveau par un calcul d'origine et de suivi (même si pour ce
dernier il n'y a pas vraiment de calcul).

Ainsi, pour chaque orbite d'évènement, s'ils sont parmi les types création,
scission ou fusion, on recalcule les origine avant de créer les relations
adéquates entre l'évènement courant et le nœud d'orbite précédent qui convient.

Sinon, et à condition que l'évènement ne soit pas de type création, on recréer
les relations de suivi.

Les nœuds d'évènement recrées sont ajoutés à une liste d'évènements.
Les nœuds d'orbite recrées sont ajoutés à une liste d'orbites.

*** Enregistrement du niveau

À partir des listes créées lors de l'appariement, on crée le niveau d'évènements
ainsi que le niveau d'orbites qui représentent alors un niveau d'application.

Si l'arbre de réévaluation n'est pas vide, ajouter le niveau à la branche
adéquate (l'index de branche est donné). Sinon, si l'index de branche donné est
supérieur à la taille de l'arbre (son nombre de branches) alors on ajoute le
niveau créé à l'arbre via une nouvelle branche.

** L'application est ADD
*** Calcul du niveau ajouté
En premier lieu, on s'assure que la branche courante est affectée par
l'application ajoutée.

Ensuite, pour chaque nœud du dernier niveau d'orbite précédemment enregistré
dans cette branche, on vient calculer les évènements et les orbites.
**** Si la branche est affectée
Suite au calcul d'un évènement on ajoute dans une liste la liaison dont la
réécriture provoque une scission (les splitlinks). Une autre liste contiendra
ces mêmes réécritures. Pour chaque nœud d'orbite, on ajoute un splitlink et une
réécriture (si l'évènement n'est pas une scission, on ajoute un -1).
*** Créations des nœuds
À partir des événements et orbites calculés, on crée les nœuds adéquats.
