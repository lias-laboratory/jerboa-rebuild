#+title: Rebuild Engine

* Algorithme de réévaluation de modèle
 La réévaluation commence avec l'initialisation de trois paramètres:
 - un compteur COUNTER (entier) valant 0;
 - une liste de résultats d'application de règle;
 - une liste de liste de brins.

On lance une boucle qui incrémente la variable `applicationIndex` sur le nombre
d'applications présentes dans la spécification paramétrique éditée.

*Dans la boucle principale*

    On récupère l'application courante avec `applicationIndex`

    Si l'application courante est de type `ADD`

    *Condition ADD vraie*
        On récupère le brin associé à l'identifiant donné en paramètre de l'application.

        On récupère un autre brin dans la même orbite. Cela permet de contrôler, pour
        les différents arbres de rejeu, si l'application est NOEFFECT ou MERGE lorsque
        le paramètre topologique est supprimé par l'application.

    *Condition ADD fausse*

        On récupère, dans les arbres de réévaluation, les paramètres topologiques
        nécessaires à l'application courante.

        Pour chaque arbre dont on a récupéré les paramètres topologiques, on incrémente
        le compteur COUNTER.

    *Sortie du bloc de condition*
    Une fois que les paramètres topologiques ont été acquis, on passe à
    l'application de la règle courante.

    *Condition l'application courante n'est pas DELETE*
        *Condition pas de paramètres disponible*
            On applique la règle courante sans paramètre topologique

    *Boucle secondaire pour mettre à jour les arbres de réévaluation*
        Pour chaque lot de paramètres topologiques (Il y en a autant que de
        branches dans l'arbre courant) on applique la règle courante.

    *Ajout de niveaux au arbres de réévaluations*
        Enfin, à l'aide des résultats d'applications et les brins de contrôles, nous
        ajoutons de nouveau niveaux dans les arbres de réévaluation.

        On initialize un niveau d'événements d'évaluation à null.

        On récupère depuis l'arbre d'évaluation courant les niveaux d'événements
        associé à l'identifiant d'application courant (lorsqu'ils existent).

        *Condition l'arbre d'évaluation courant contient l'identifiant de
        l'application courante OU l'application courante est ajoutée*

            *Condition List of evaluation events is not empty*

                Par défaut, on assigne le premier niveau d'événements (parce que
                pour le moment il n'y a qu'/une seule branche dans les arbres d'évaluation!/)

            Enfin, dans une dernière boucle, on appelle la méthode addLevel des
            arbres de réévaluation autant de fois qu'il y a de résultats
            d'application d'enregistrés.

* Pour résumer

On maintient un compteur

Pour chaque application issue de la spécification éditée

    On récupère les paramètres topologiques
    On incrémente le compteur (+1 pour chaque arbre dont on a collecté les paramètres)
    On applique l'opération courante
    On ajoute un niveau d'application dans chacun des arbres de réévaluation
